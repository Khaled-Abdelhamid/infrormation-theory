from helpers import *
import matplotlib.pyplot as plt
from PIL import Image
import numpy as np

# call the image and convert it into gray scale bitmap
oimage = Image.open("t1.bmp").convert('LA')
oimage.save('t1.png')

gim = plt.imread('t1.png')
gray = rgb2gray(gim)*255
rows,cols=gray.shape

plt.imshow(gray, cmap=plt.get_cmap('gray'), vmin=0, vmax=255)


# quantiation tables
Q0=[[1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1],
    [1,1,1,1,1,1,1,1]]
Q1=[[1,1,1,1,1,2,2,4],
    [1,1,1,1,1,2,2,4],
    [1,1,1,1,2,2,2,4],
    [1,1,1,1,2,2,4,8],
    [1,1,2,2,2,2,4,8],
    [2,2,2,2,2,4,8,8],
    [2,2,2,4,4,8,8,16],
    [4,4,4,4,8,8,16,16]]
Q2=[[1,2,4,8,16,32,64,128],
    [2,4,4,8,16,32,64,128],
    [4,4,8,16,32,64,128,128],
    [8,8,16,32,64,128,128,256],
    [16,16,32,64,128,128,256,256],
    [32,32,64,128,128,256,256,256],
    [64,64,128,128,256,256,256,256],
    [128,128,128,256,256,256,256,256]]
Q3= [
    [17,18,24,47,99,99,99,99],
    [18,21,26,66,99,99,99,99],
    [24,26,56,99,99,99,99,99],
    [47,66,99,99,99,99,99,99],
    [99,99,99,99,99,99,99,99],
    [99,99,99,99,99,99,99,99],
    [99,99,99,99,99,99,99,99],
    [99,99,99,99,99,99,99,99]]
Q4= [
    [32,32,32,32,32,32,32,32],
    [32,32,32,32,32,32,32,32],
    [32,32,32,32,32,32,32,32],
    [32,32,32,32,32,32,32,32],
    [32,32,32,32,32,32,32,32],
    [32,32,32,32,32,32,32,32],
    [32,32,32,32,32,32,32,32],
    [32,32,32,32,32,32,32,32]
    ]
Q5= [
    [128,128,128,128,128,128,128,128],
    [128,128,128,128,128,128,128,128],
    [128,128,128,128,128,128,128,128],
    [128,128,128,128,128,128,128,128],
    [128,128,128,128,128,128,128,128],
    [128,128,128,128,128,128,128,128],
    [128,128,128,128,128,128,128,128],
    [128,128,128,128,128,128,128,128]
    ]
Q6= [
    [16,11,10,16,24,40,51,61],
    [12,12,14,19,26,58,60,55],
    [14,13,16,24,40,57,69,56],
    [14,17,22,29,51,87,80,62],
    [18,22,37,56,68,109,103,77],
    [24,35,55,64,81,104,113,92],
    [49,64,78,87,103,121,120,101],
    [72,92,95,98,112,100,103,99]
    ]

frows,fcols = 8,8 #choose the frame size
Q=Q2              #choose quantization matrix

code,huffman = encode(gray,frows,fcols,Q) # return the encoded image
recovered= decode(code,huffman,rows,cols,frows,fcols,Q)
plt.imshow(recovered, cmap=plt.get_cmap('gray'), vmin=0, vmax=255)
print("the error  the image is : ",100*error(gray,recovered)/np.sum(np.square(gray)),"%")